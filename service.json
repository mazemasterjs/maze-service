{
    "name": "maze",
    "baseUrl": "/api/maze/",
    "endpoints": [
        {
            "name": "service",
            "description": "This document which gleefully describes itself via json.",
            "method": "get",
            "contentType": "application/json",
            "url": "service",
            "arguments": []
        },
        {
            "name": "count",
            "description": "Returns a count of documents in the mazes collection",
            "contentType": "application/json",
            "method": "get",
            "url": "get/count",
            "arguments": []
        },
        {
            "name": "all",
            "description": "Returns stubbed maze data for all documents in the mazes collection.  Stubs contain all meta data, but leave out the cells[][], startCell, finishCell, _id, and textRender.  Use /get/mazeId to get a full maze document. ",
            "contentType": "application/json",
            "method": "get",
            "url": "get/all",
            "arguments": []
        },
        {
            "name": "get",
            "description": "Get a specific maze from the Mazes collection.",
            "method": "get",
            "contentType": "application/json",
            "url": "get/{mazeId}",
            "arguments": [
                {
                    "name": "mazeId",
                    "description": "mazeId is a string concatenation the height, width, challenge-level, name, and seed fields. For example: '3:5:10:TestMaze:SampleSeed'",
                    "type": "string"
                }
            ]
        },
        {
            "name": "delete",
            "description": "Delete document(s) with the given MazeId from the mazes collection.",
            "method": "delete",
            "contentType": "application/json",
            "url": "delete/{mazeId}",
            "arguments": [
                {
                    "name": "mazeId",
                    "description": "mazeId is a string concatenation the height, width, challenge-level, name, and seed fields. For example: '3:5:10:TestMaze:SampleSeed'",
                    "type": "string"
                }
            ]
        },
        {
            "name": "generate",
            "description": "Generates a new Maze from the given height, width, challenge-level, and seed.",
            "method": "get",
            "contentType": "application/json",
            "url": "{generate}/{height}/{width}/{challenge}/{name}/{seed}",
            "arguments": [
                {
                    "name": "height",
                    "description": "The height of the maze to generate. This must be a numeric value ranging from MAZE_MIN_HEIGHT to MAZE_MAX_HEIGHT.",
                    "type": "integer"
                },
                {
                    "name": "width",
                    "description": "The width of the maze to generate. This must be a numeric value ranging from MAZE_MIN_WIDTH and MAZE_MAX_WIDTH.",
                    "type": "integer"
                },
                {
                    "name": "challenge",
                    "description": "The challenge (difficulty) of the maze to generate. This must be a numeric value from 0 (easiest) to 10 (most difficult).",
                    "type": "integer"
                },
                {
                    "name": "name",
                    "description": "The name of the new maze. This is a string value.",
                    "type": "string"
                },
                {
                    "name": "seed",
                    "description": "The seed value to use when generating this maze. This is a string value.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "generate/default-maze-list",
            "description": "Regenerates the default mazes (see https://github.com/mazemasterjs/shared-library/blob/development/data/maze-list.json) and stores them in the database's mazes collection.",
            "method": "get",
            "contentType": "application/json",
            "url": "generate/default-maze-list",
            "arguments": []
        },
        {
            "name": "insert",
            "description": "Insert the JSON representation of a Maze object into the mazes collection. Data provided via document body.",
            "method": "put",
            "contentType": "application/json",
            "url": "insert",
            "arguments": []
        },
        {
            "name": "update",
            "description": "Updates document with matching ID in the mazes collection with the JSON representation of a Maze object provided via the document body.",
            "method": "put",
            "contentType": "application/json",
            "url": "update",
            "arguments": []
        },
        {
            "name": "live",
            "description": "Liveness probe for K8s monitoring.",
            "contentType": "application/json",
            "method": "get",
            "url": "probes/live",
            "arguments": []
        },
        {
            "name": "ready",
            "description": "Readiness probe for K8s monitoring.",
            "contentType": "application/json",
            "method": "get",
            "url": "probes/ready",
            "arguments": []
        }
    ]
}
